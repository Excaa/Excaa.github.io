// Generated by Haxe 3.4.0
(function ($hx_exports, $global) { "use strict";
$hx_exports["util"] = $hx_exports["util"] || {};
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Config = $hx_exports["Config"] = function() {
};
Config.__name__ = true;
Config.prototype = {
	__class__: Config
};
var EReg = function() { };
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
var Main = $hx_exports["Main"] = function() {
	this.textPhase = 0;
	this.tickListeners = [];
	createjs.Ticker = null;
	util_LoaderWrapper.LOAD_ASSETS(Config.ASSETS,$bind(this,this.onAssetsLoaded));
};
Main.__name__ = true;
Main.main = function() {
	$().ready(function() {
		Main.instance = new Main();
	});
};
Main.prototype = {
	onAssetsLoaded: function() {
		this.initializeRenderer();
		this.initializeControls();
		window.addEventListener("resize",$bind(this,this.onResize),false);
		window.addEventListener("orientationchange",$bind(this,this.onResize),false);
	}
	,onResize: function(event) {
		var _gthis = this;
		if(this.resizeTimer != null) {
			this.resizeTimer.stop();
		}
		this.resizeTimer = haxe_Timer.delay(function() {
			var size = _gthis.getGameSize();
			_gthis.renderer.resize(size.width,size.height);
			_gthis.card.scale.x = _gthis.card.scale.y = 1;
			if(size.width > size.height) {
				_gthis.card.gfx.texture = util_Asset.getTexture("card.png",false);
				var s = Math.min(size.width / _gthis.card.gfx.width,size.height / _gthis.card.gfx.height) * 0.9;
				if(s > 1) {
					s = 1;
				}
				_gthis.card.scale.x = _gthis.card.scale.y = s;
				_gthis.card.x = Math.round((size.width - _gthis.card.gfx.width * s) / 2);
				_gthis.card.y = Math.round((size.height - _gthis.card.gfx.height * s) / 2);
				_gthis.text1.x = 58;
				_gthis.text1.y = 270;
				_gthis.text2.position = _gthis.text1.position;
				_gthis.art.resize(1280,720,false);
				_gthis.artsprite.scale.y = 1.0;
				_gthis.border.clear();
				_gthis.border.lineStyle(4,16777215,1);
				_gthis.border.drawRect(0,0,1280,720);
			} else {
				_gthis.card.gfx.texture = util_Asset.getTexture("card_mobi.png",false);
				var s1 = Math.min(size.width / _gthis.card.gfx.width,size.height / _gthis.card.gfx.height) * 0.9;
				_gthis.card.scale.x = _gthis.card.scale.y = s1;
				_gthis.card.x = Math.round((size.width - _gthis.card.gfx.width * s1) / 2);
				_gthis.card.y = Math.round((size.height - _gthis.card.gfx.height * s1) / 2);
				_gthis.text1.y = 400;
				_gthis.text2.y = 400;
				_gthis.text1.x = 65;
				_gthis.text2.x = 20;
				_gthis.art.resize(662,1018,false);
				_gthis.artsprite.scale.y = 1.5;
				_gthis.border.clear();
				_gthis.border.lineStyle(4,16777215,1);
				_gthis.border.drawRect(0,0,662,1018);
			}
			_gthis.mainContainer.visible = true;
		},50);
	}
	,getGameSize: function() {
		return new PIXI.Rectangle(0,0,window.innerWidth,window.innerHeight);
	}
	,initializeRenderer: function() {
		var size = this.getGameSize();
		var options = { };
		options.autoResize = false;
		options.antialias = false;
		options.backgroundColor = 0;
		options.clearBeforeRender = true;
		options.preserveDrawingBuffer = false;
		options.roundPixels = false;
		this.renderer = PIXI.autoDetectRenderer(size.width,size.height,options);
		window.document.getElementById("game").appendChild(this.renderer.view);
	}
	,initializeControls: function() {
		this.mainContainer = new PIXI.Container();
		this.onResize(null);
		this.ticker = new PIXI.ticker.Ticker();
		this.ticker.start();
		this.ticker.add($bind(this,this.onTickerTick));
		this.card = new controls_Card();
		this.mainContainer.addChild(this.card);
		this.a1 = new controls_Aurora();
		this.a2 = new controls_Aurora();
		this.a3 = new controls_Aurora();
		this.a4 = new controls_Aurora();
		this.a4.visible = false;
		this.a1.y = -220;
		this.a1.x = -190;
		this.a2.x = -200;
		this.a2.y = -140;
		this.a3.x = -200;
		this.a3.y = -40;
		this.a4.x = 800;
		this.a4.scale.x = -1;
		this.arc = new PIXI.Container();
		this.art = new PIXI.RenderTexture(new PIXI.BaseRenderTexture(1280,720),new PIXI.Rectangle(0,0,1280,720));
		this.text1 = util_Asset.getImage("text_en.png",false);
		this.text2 = util_Asset.getImage("text_fi.png",false);
		this.text2.alpha = 0;
		this.text1.x = 58;
		this.text1.y = 270;
		this.text2.position = this.text1.position;
		this.arc.addChild(this.a3);
		this.arc.addChild(this.a2);
		this.arc.addChild(this.a1);
		this.arc.addChild(this.a4);
		this.artsprite = new PIXI.Sprite(this.art);
		this.artspriteR = new PIXI.Sprite(this.art);
		this.artspriteR.scale.y = -1;
		this.artspriteR.anchor.y = 1;
		this.artspriteR.alpha = 0.25;
		this.artsprite.blendMode = PIXI.BLEND_MODES.ADD;
		this.card.addChild(this.artsprite);
		this.card.addChild(this.artspriteR);
		var g = new PIXI.Graphics();
		g.lineStyle(4,16777215,1);
		g.drawRect(0,0,1280,720);
		this.card.addChild(g);
		this.border = g;
		this.card.addChild(this.text1);
		this.card.addChild(this.text2);
		this.textSwapTimer = new haxe_Timer(8000);
		this.textSwapTimer.run = $bind(this,this.onTextSwap);
	}
	,onTextSwap: function() {
		if(this.textPhase == 0) {
			this.textPhase = 1;
			createjs.Tween.get(this.text1).to({ alpha : 0},1000);
			createjs.Tween.get(this.text2).wait(1000,true).to({ alpha : 1},1000);
		} else {
			this.textPhase = 0;
			createjs.Tween.get(this.text1).wait(1000,true).to({ alpha : 1},1000);
			createjs.Tween.get(this.text2).to({ alpha : 0},1000);
		}
	}
	,onTickerTick: function() {
		var delta = this.ticker.deltaTime;
		createjs.Tween.tick(this.ticker.elapsedMS,false);
		var _g = 0;
		var _g1 = this.tickListeners;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			t(delta);
		}
		($_=this.renderer,$bind($_,$_.render))(this.arc,this.art);
		this.renderer.render(this.mainContainer);
	}
	,__class__: Main
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var controls_Aurora = function() {
	this.mp = 0.1 + Math.random() * 0.5;
	this.speed = 100 + Math.random() * 20;
	this.time = Math.random() * 10;
	PIXI.Container.call(this);
	this.ropes = [];
	var _g = 0;
	while(_g < 100) {
		var rope = new PIXI.mesh.Plane(util_Asset.getTexture("revontuli.png",false),2,2);
		rope.x = _g++ * 15;
		this.ropes.push(rope);
		var tmp = Math.random() * 1.15;
		rope.scale.x = tmp + 0.5;
		var tmp1 = Math.random() * 0.15;
		rope.scale.y = tmp1 + 1;
		this.addChild(rope);
	}
	Main.instance.tickListeners.push($bind(this,this.ontick));
};
controls_Aurora.__name__ = true;
controls_Aurora.__super__ = PIXI.Container;
controls_Aurora.prototype = $extend(PIXI.Container.prototype,{
	ontick: function(delta) {
		this.time += delta / this.speed;
		var c = 0;
		var _g = 0;
		var _g1 = this.ropes;
		while(_g < _g1.length) {
			var rope = _g1[_g];
			++_g;
			rope.y = Math.cos(c * this.mp + this.time) * 7 + c * 1.3;
			rope.alpha = Math.abs(Math.sin(c * this.mp + this.time) * 0.4 + Math.cos(c * 0.5 + this.time * 0.5) * 0.5) * 0.4;
			rope.vertices[5] = Math.sin(c * this.mp + this.time) * 10 + 295;
			rope.vertices[7] = Math.sin(c * this.mp + this.time + 0.3) * 10 + 295;
			++c;
		}
	}
	,__class__: controls_Aurora
});
var controls_Card = function() {
	PIXI.Container.call(this);
	this.gfx = util_Asset.getImage("card.png",false);
	this.addChild(this.gfx);
};
controls_Card.__name__ = true;
controls_Card.__super__ = PIXI.Container;
controls_Card.prototype = $extend(PIXI.Container.prototype,{
	__class__: controls_Card
});
var filters_space_SpaceFilter = function() {
	this.time = 0;
	var tex = util_Asset.getTexture("noise.jpg",false);
	tex.baseTexture.mipmap = false;
	tex.baseTexture.wrapMode = PIXI.WRAP_MODES.REPEAT;
	var perlin = util_Asset.getTexture("perlin.jpg",false);
	perlin.baseTexture.mipmap = false;
	perlin.baseTexture.wrapMode = PIXI.WRAP_MODES.REPEAT;
	var starnoise = util_Asset.getTexture("noise2.png",false);
	starnoise.baseTexture.mipmap = false;
	starnoise.baseTexture.wrapMode = PIXI.WRAP_MODES.REPEAT;
	var frag = haxe_Resource.getString("space.frag");
	PIXI.Filter.call(this,null,frag,this.uniforms);
	this.uniforms.noise = tex;
	this.uniforms.perlin = perlin;
	this.uniforms.starnoise = starnoise;
	this.padding = 0;
};
filters_space_SpaceFilter.__name__ = true;
filters_space_SpaceFilter.__super__ = PIXI.Filter;
filters_space_SpaceFilter.prototype = $extend(PIXI.Filter.prototype,{
	resize: function(size) {
		this.uniforms.aspect = size.height / size.width;
	}
	,apply: function(filterManager,input,output,clear) {
		this.time += 0.00011627906976744187;
		if(this.time > 100) {
			this.time = 0;
		}
		this.uniforms.time = this.time;
		PIXI.Filter.prototype.apply.call(this,filterManager,input,output,clear);
	}
	,wrong: function() {
		this.uniforms.flash += 2;
		createjs.Tween.removeTweens(this.uniforms);
		createjs.Tween.get(this.uniforms).to({ flash : 0},1050,createjs.Ease.quadIn);
	}
	,__class__: filters_space_SpaceFilter
});
var haxe_Resource = function() { };
haxe_Resource.__name__ = true;
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			return haxe_crypto_Base64.decode(x.data).toString();
		}
	}
	return null;
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				s += fcc((c & 31) << 12 | (b[i++] & 127) << 6 | b[i++] & 127);
			} else {
				var u = (c & 15) << 18 | (b[i++] & 127) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
haxe_crypto_Base64.__name__ = true;
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		switch(bytes.length % 3) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
haxe_crypto_BaseCode.__name__ = true;
haxe_crypto_BaseCode.prototype = {
	encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0?0:1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask] & 255;
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask] & 255;
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) tbl[_g++] = -1;
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i = _g1++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255 & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
haxe_io_FPHelper.__name__ = true;
haxe_io_FPHelper.i32ToFloat = function(i) {
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return (1 - (i >>> 31 << 1)) * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0?-f:f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608);
	if(sig == 8388608 && exp < 128) {
		sig = 0;
		++exp;
	}
	return (f < 0?-2147483648:0) | exp + 127 << 23 | sig;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class?o.__name__ != null:false) {
			return true;
		}
		if(cl == Enum?o.__ename__ != null:false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) this.a[_g1++] = 0;
		this.byteLength = len;
	}
};
js_html_compat_ArrayBuffer.__name__ = true;
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null?null:end - begin);
	var result = new ArrayBuffer(u.byteLength);
	new Uint8Array(result).set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Float32Array = function() { };
js_html_compat_Float32Array.__name__ = true;
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
js_html_compat_Uint8Array.__name__ = true;
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var util_Asset = $hx_exports["util"]["Asset"] = function() {
	throw new js__$Boot_HaxeError("Asset is static only.");
};
util_Asset.__name__ = true;
util_Asset.init = function(loader) {
	util_Asset._loader = loader;
};
util_Asset.getResource = function(name) {
	if(!Object.prototype.hasOwnProperty.call(util_Asset._loader.resources,name)) {
		console.log("Resource " + name + " not found!");
	}
	return Reflect.field(util_Asset._loader.resources,name);
};
util_Asset.getRawImage = function(name) {
	return util_Asset.getResource(name).data;
};
util_Asset.getTexture = function(name,fromSheet) {
	if(!fromSheet) {
		name = "img/" + name;
	}
	var tex = null;
	try {
		tex = PIXI.Texture.fromFrame(name);
	} catch( e ) {
		tex = PIXI.Texture.fromImage(name);
	}
	if(tex == null) {
		console.log("Warning: Asset " + name + " not found.");
	}
	if(tex != null && util_Asset._prepared.indexOf(tex.baseTexture) == -1) {
		util_Asset._prepared.push(tex.baseTexture);
		Main.instance.renderer.plugins.prepare.upload(tex.baseTexture);
	}
	return tex;
};
util_Asset.getImage = function(name,fromSheet) {
	if(!fromSheet) {
		name = "img/" + name;
	}
	var sprite = null;
	try {
		sprite = PIXI.Sprite.fromFrame(name);
	} catch( e ) {
		new PIXI.Sprite(PIXI.Texture.fromImage(name));
	}
	if(sprite == null) {
		console.log("Warning: Asset " + name + " not found.");
	}
	if(sprite != null && util_Asset._prepared.indexOf(sprite.texture.baseTexture) == -1) {
		util_Asset._prepared.push(sprite.texture.baseTexture);
		Main.instance.renderer.plugins.prepare.upload(sprite.texture.baseTexture);
	}
	return sprite;
};
util_Asset.getTexturesAndAnimations = function(json,id) {
	var tex = [];
	var anim = { };
	var ret = { textures : tex, animations : anim};
	var count = 0;
	var _g = 0;
	var _g1 = Reflect.fields(json.frames);
	while(_g < _g1.length) {
		var frame = _g1[_g];
		++_g;
		var split = frame.split("/");
		if(split[0] != id) {
			continue;
		}
		var animName = split[1];
		var texture = PIXI.Texture.fromFrame(frame);
		tex.push(texture);
		if(texture != null && util_Asset._prepared.indexOf(texture.baseTexture) == -1) {
			util_Asset._prepared.push(texture.baseTexture);
			Main.instance.renderer.plugins.prepare.upload(texture.baseTexture);
		}
		if(Object.prototype.hasOwnProperty.call(anim,animName)) {
			Reflect.field(anim,animName)[1] = count;
		} else {
			anim[animName] = [count,count];
		}
		++count;
	}
	return ret;
};
util_Asset.getTextures = function(json,id) {
	var tex = [];
	var _g = 0;
	var _g1 = Reflect.fields(json.frames);
	while(_g < _g1.length) {
		var frame = _g1[_g];
		++_g;
		if(id.match(frame)) {
			var texture = PIXI.Texture.fromFrame(frame);
			tex.push(texture);
			if(util_Asset._prepared.indexOf(texture.baseTexture) == -1) {
				util_Asset._prepared.push(texture.baseTexture);
				Main.instance.renderer.plugins.prepare.upload(texture.baseTexture);
			}
		}
	}
	return tex;
};
util_Asset.prototype = {
	__class__: util_Asset
};
var util_LoaderWrapper = $hx_exports["LW"] = function() {
	throw new js__$Boot_HaxeError("LoaderWrapper is static only.");
};
util_LoaderWrapper.__name__ = true;
util_LoaderWrapper.beforeSheetLoad = function() {
	return function(r,next) {
		if(r.name.indexOf("json_image") >= 0 && r.url.indexOf("?") == -1) {
			r.url += "?_=" + haxe_crypto_Base64.encode(haxe_io_Bytes.ofString(Config.VERSION));
		}
		next();
	};
};
util_LoaderWrapper.LOAD_ASSETS = function(assets,onComplete) {
	util_LoaderWrapper.onComplete = onComplete;
	util_LoaderWrapper.complete = false;
	if(util_LoaderWrapper.loader == null) {
		util_LoaderWrapper.loader = new PIXI.loaders.Loader();
		util_LoaderWrapper.loader.before(util_LoaderWrapper.beforeSheetLoad());
		util_Asset.init(util_LoaderWrapper.loader);
	}
	util_LoaderWrapper.totalCount = 0;
	util_LoaderWrapper.batches = [];
	var _g1 = 0;
	var _g = assets.length;
	while(_g1 < _g) {
		var i = _g1++;
		var batchNumber = Math.floor(i / 1);
		if(util_LoaderWrapper.batches[batchNumber] == null) {
			util_LoaderWrapper.batches[batchNumber] = [];
		}
		var name = assets[i];
		util_LoaderWrapper.batches[batchNumber].push(name);
		if(batchNumber == 0) {
			util_LoaderWrapper.addLoad(name);
		}
		if(name.indexOf("img") >= 0 && HxOverrides.substr(name,name.length - 4,4) == "json") {
			util_LoaderWrapper.totalCount += 2;
		} else if(name.indexOf(".fnt") >= 0) {
			util_LoaderWrapper.totalCount += 2;
		} else {
			util_LoaderWrapper.totalCount++;
		}
	}
	util_LoaderWrapper.batches.shift();
	util_LoaderWrapper.loadCount = 0;
	util_LoaderWrapper.updateText();
	util_LoaderWrapper.loader.addListener("progress",function(e) {
		util_LoaderWrapper.loadCount++;
		util_LoaderWrapper.updateText();
	});
	util_LoaderWrapper.loader.addListener("complete",function(e1) {
		if(util_LoaderWrapper.batches.length == 0) {
			util_LoaderWrapper.imagesComplete = true;
			util_LoaderWrapper.assetLoaded();
		} else {
			var batch = util_LoaderWrapper.batches.shift();
			var _g2 = 0;
			while(_g2 < batch.length) {
				var name1 = batch[_g2];
				++_g2;
				util_LoaderWrapper.addLoad(name1);
			}
			util_LoaderWrapper.loader.load();
		}
	});
	util_LoaderWrapper.loader.load();
};
util_LoaderWrapper.addLoad = function(name) {
	var n = name;
	var index = name.indexOf("@");
	if(index >= 0) {
		n = HxOverrides.substr(name,0,index) + HxOverrides.substr(name,name.lastIndexOf("."),null);
	}
	util_LoaderWrapper.loader.add(n,name + "?_=" + haxe_crypto_Base64.encode(haxe_io_Bytes.ofString(Config.VERSION)));
};
util_LoaderWrapper.assetLoaded = function() {
	if(util_LoaderWrapper.imagesComplete && !util_LoaderWrapper.complete) {
		util_LoaderWrapper.complete = true;
		util_LoaderWrapper.onComplete();
	}
};
util_LoaderWrapper.updateText = function() {
	window.document.getElementById("preload").innerHTML = "Loading: please wait a moment. ";
};
util_LoaderWrapper.prototype = {
	__class__: util_LoaderWrapper
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
haxe_Resource.content = [{ name : "space.frag", data : "cHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7DQoNCnZhcnlpbmcgdmVjMiB2RmlsdGVyQ29vcmQ7DQp2YXJ5aW5nIHZlYzIgdlRleHR1cmVDb29yZDsNCnZhcnlpbmcgdmVjNCB2Q29sb3I7DQoNCnVuaWZvcm0gdmVjNCBmaWx0ZXJBcmVhOw0KdW5pZm9ybSBzYW1wbGVyMkQgdVNhbXBsZXI7DQp1bmlmb3JtIHNhbXBsZXIyRCBub2lzZTsNCnVuaWZvcm0gc2FtcGxlcjJEIHBlcmxpbjsNCnVuaWZvcm0gc2FtcGxlcjJEIHN0YXJub2lzZTsNCg0KdW5pZm9ybSBmbG9hdCB0aW1lOw0KdW5pZm9ybSB2ZWMyIG9mZjsNCg0KZmxvYXQgcmFuZCh2ZWMyIGNvKXsNCiAgICByZXR1cm4gZnJhY3Qoc2luKGRvdChjby54eSAsdmVjMigxMi45ODk4LDc4LjIzMykpKSAqIDQzNzU4LjU0NTMpOw0KfQ0KDQp2b2lkIG1haW4oKQ0Kew0KICAgIHZlYzIgdXYgPSB2RmlsdGVyQ29vcmQqMS40Ow0KDQogICAgdXYrPXRpbWUrdXYueCpzaW4odGltZSk7DQogICAgZmxvYXQgdCA9IHRpbWUqLjE7DQogICAgZmxvYXQgbjQgPSB0ZXh0dXJlMkQocGVybGluLCB2RmlsdGVyQ29vcmQqMS4yK3QqMTIuLW9mZiouMikucjsNCglmbG9hdCBuMyA9IHRleHR1cmUyRChwZXJsaW4sIHZGaWx0ZXJDb29yZCowLjgtdCo0NS4tb2ZmKi4yKS5yOw0KICAgIGZsb2F0IG4yID0gdGV4dHVyZTJEKHBlcmxpbiwgdkZpbHRlckNvb3JkKjAuNy10KjEyLjQtb2ZmKi4yKS5yOw0KICAgIHZlYzQgYmFzZSA9IHRleHR1cmUyRCh1U2FtcGxlciwgdkZpbHRlckNvb3JkKTsNCiAgICANCiAgICBmbG9hdCBuID1uNCtuMytuMjsNCiAgICANCiAgICB2ZWM0IGNvbCA9IHZlYzQobixuLG4sMSk7DQogICAgY29sKj12ZWM0KDAuMiwwLjE1LDAuNywxLikqY29sKjAuMjsNCiAgICBnbF9GcmFnQ29sb3IgPSBiYXNlK2NvbDsNCn0"},{ name : "sun.frag", data : "cHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7DQoNCnZhcnlpbmcgdmVjMiB2RmlsdGVyQ29vcmQ7DQp2YXJ5aW5nIHZlYzIgdlRleHR1cmVDb29yZDsNCnZhcnlpbmcgdmVjNCB2Q29sb3I7DQoNCnVuaWZvcm0gdmVjNCBmaWx0ZXJBcmVhOw0KdW5pZm9ybSBzYW1wbGVyMkQgdVNhbXBsZXI7DQp1bmlmb3JtIHNhbXBsZXIyRCBub2lzZTsNCnVuaWZvcm0gc2FtcGxlcjJEIHBlcmxpbjsNCg0KdW5pZm9ybSBmbG9hdCB0aW1lOw0KDQpmbG9hdCByYW5kKHZlYzIgY28pew0KICAgIHJldHVybiBmcmFjdChzaW4oZG90KGNvLnh5ICx2ZWMyKDEyLjk4OTgsNzguMjMzKSkpICogNDM3NTguNTQ1Myk7DQp9DQp2b2lkIG1haW4oKQ0Kew0KICAgIHZlYzIgdXYgPSB2VGV4dHVyZUNvb3JkOw0KCXZlYzIgcGl4ZWxDb29yZCA9IHZUZXh0dXJlQ29vcmQgKiBmaWx0ZXJBcmVhLnh5Ow0KCXZlYzIgbnV2PXZUZXh0dXJlQ29vcmQJK3RpbWU7DQoJZmxvYXQgcCA9IHRleHR1cmUyRChwZXJsaW4sIG51diowLjIpLnItMC41Ow0KCWZsb2F0IG4gPSB0ZXh0dXJlMkQobm9pc2UsIG51dio1LjEpLnItMC41Ow0KCQ0KCXV2Kj0xLisobitwKjAuKSowLjAzOw0KCQ0KCXZlYzQgYyA9IHRleHR1cmUyRCh1U2FtcGxlciwgdXYpOw0KCXZlYzQgZmMgPSBjK3ZlYzQocmFuZCh1dit0aW1lKSowLjEscmFuZCh1dit0aW1lKSowLjEscmFuZCh1dit0aW1lKSowLjEsMC4pKmMuYTsNCglmYy5hID0gYy5hOw0KCWdsX0ZyYWdDb2xvciA9ZmM7DQp9"}];
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
Config.ASSETS = ["img/card.png","img/card_mobi.png","img/revontuli.png","img/text_en.png","img/text_fi.png"];
Config.VERSION = "Christmas card 2018";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
js_Boot.__toStr = ({ }).toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
util_Asset._init = false;
util_Asset._prepared = [];
util_LoaderWrapper.complete = false;
util_LoaderWrapper.loadCount = 0;
util_LoaderWrapper.totalCount = 0;
util_LoaderWrapper.fontLoadStarted = false;
util_LoaderWrapper.imagesComplete = false;
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
